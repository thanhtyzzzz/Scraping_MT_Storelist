import requests
import pandas as pd
import sqlite3
from datetime import datetime

# H√†m ghi log v√†o SQLite
def log_to_sqlite(file_name, status, message):
    log_file = "storelist_logs.db"
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    
    try:
        conn = sqlite3.connect(log_file)
        cursor = conn.cursor()
        
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS logs (
                LogID INTEGER PRIMARY KEY AUTOINCREMENT,
                Timestamp TEXT,
                File TEXT,
                Status TEXT,
                Message TEXT
            )
        ''')
        
        cursor.execute('''
            INSERT INTO logs (Timestamp, File, Status, Message)
            VALUES (?, ?, ?, ?)
        ''', (timestamp, file_name, status, message))
        
        conn.commit()
        print(f"ƒê√£ ghi log v√†o {log_file}: {status} - {message}")
    except Exception as e:
        print(f"L·ªói khi ghi log v√†o {log_file}: {e}")
    finally:
        conn.close()

# API endpoint
try:
    url = 'https://api-gateway.pharmacity.vn/api/v1/seo_stores'
    log_to_sqlite("Pharmacity.py", "Pending", f"B·∫Øt ƒë·∫ßu g·ª≠i request API t·ªõi {url}")
    res = requests.get(url)
    res.raise_for_status()
    log_to_sqlite("Pharmacity.py", "Succeeded", f"G·ª≠i request API t·ªõi {url} th√†nh c√¥ng")
except Exception as e:
    log_to_sqlite("Pharmacity.py", "Failed", f"L·ªói khi g·ª≠i request API: {e}")
    raise

# Truy c·∫≠p ƒë√∫ng v√†o danh s√°ch c·ª≠a h√†ng
try:
    data = res.json()
    items = data.get('data', {}).get('items', [])
    print(f"üîç T·ªïng s·ªë c·ª≠a h√†ng SEO stores: {len(items)} m·ª•c")
    log_to_sqlite("Pharmacity.py", "Succeeded", f"T·ªïng s·ªë c·ª≠a h√†ng SEO stores: {len(items)} m·ª•c")
except Exception as e:
    log_to_sqlite("Pharmacity.py", "Failed", f"L·ªói khi parse JSON: {e}")
    raise

store_list = []

# L·∫∑p t·ª´ng c·ª≠a h√†ng
for store in items:
    try:
        store_list.append([
            store.get('name', ''),
            store.get('address', ''),
            store.get('province', ''),
            store.get('district', ''),
            store.get('ward', ''),
            store.get('latitude', ''),
            store.get('longitude', ''),
            store.get('url_maps', ''),
            store.get('open_time', ''),
            store.get('close_time', ''),
            store.get('phone', ''),
            store.get('zalo_url', '')
        ])
        log_to_sqlite("Pharmacity.py", "Succeeded", f"L·∫•y c·ª≠a h√†ng: {store.get('name', '')}, {store.get('address', '')}")
    except Exception as e:
        log_to_sqlite("Pharmacity.py", "Failed", f"L·ªói khi x·ª≠ l√Ω c·ª≠a h√†ng: {e}")
        continue

# Export ra XLSX
log_to_sqlite("Pharmacity.py", "Pending", "B·∫Øt ƒë·∫ßu l∆∞u file pharmacity_all_stores.xlsx")
try:
    df = pd.DataFrame(store_list, columns=[
        'T√™n c·ª≠a h√†ng', 'ƒê·ªãa ch·ªâ', 'T·ªânh', 'Qu·∫≠n/Huy·ªán', 'Ph∆∞·ªùng/X√£',
        'Vƒ© ƒë·ªô', 'Kinh ƒë·ªô', 'Google Maps', 'Gi·ªù m·ªü c·ª≠a', 'Gi·ªù ƒë√≥ng c·ª≠a',
        'SƒêT', 'Zalo URL'
    ])
    df.to_excel('pharmacity_all_stores.xlsx', index=False, engine='openpyxl')
    print(f"ƒê√£ l∆∞u {len(store_list)} c·ª≠a h√†ng v√†o pharmacity_all_stores.xlsx")
    log_to_sqlite("Pharmacity.py", "Succeeded", f"ƒê√£ l∆∞u {len(store_list)} c·ª≠a h√†ng v√†o pharmacity_all_stores.xlsx")
except Exception as e:
    log_to_sqlite("Pharmacity.py", "Failed", f"L·ªói khi l∆∞u file pharmacity_all_stores.xlsx: {e}")
    raise